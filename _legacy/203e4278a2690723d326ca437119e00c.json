{"author":0,"content":"Neues Jahr, neues Gl\u00fcck? In Sachen Programmiersprachen gibts 2015 allerhand Interessantes: Neue Sprachen stehen in den Startl\u00f6chern, andere haben bereits Fahrt aufgenommen und alte Bekannte werden general\u00fcberholt. Meiner Meinung nach d\u00fcrften in diesem Jahr in vielen Bereichen \u00c4nderungen stattfinden. Hier mal meine rein subjektive Einsch\u00e4tzung zu unterschiedlichen Sprachen [---]...\n\n##Web Frontend\n\nGleich mal am Anfang die unspektakul\u00e4re Nachricht: Javascript wird bleiben! Ich seh keinen Nachfolger, keiner der unz\u00e4hligen Dialekte und Herausforderer scheinen sich durchzusetzen. Wie immer liegt's wohl eher an den Browserherstellern, die eher z\u00f6gerlich neue Sprachen in ihre Programme integrieren. Was 2015 ansteht, ist ECMAScript 6, wo schon [viel supported wird](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/JavaScript\/New_in_JavaScript\/ECMAScript_6_support_in_Mozilla) aber noch wichtige Teile fehlen.\n\nUnabh\u00e4ngig von Programmiersprachen ist im Frontend immer noch die Frage offen, welches Framework sich durchsetzen wird. In letzter Zeit h\u00f6rt man viel \u00fcber [ReactJS](http:\/\/facebook.github.io\/react\/) von Facebook, Googles [AngularJS](https:\/\/angularjs.org\/) liest man auch ab und zu. Eher Newcomer oder f\u00fcr Spezialbereiche sind das Websocket\/node.js Framework [Meteor](https:\/\/www.meteor.com\/) und das Web Components Polyfill [Polymer](https:\/\/www.polymer-project.org\/). Was unterm Strich wirklich die Nase vorne haben wird, kann ich noch nicht absehen ... irgendwie fehlt da noch was.\n* [ECMAScript 6 compatibility table](http:\/\/kangax.github.io\/compat-table\/es6\/)\n* [Draft ECMA-262 6th Edition](https:\/\/people.mozilla.org\/~jorendorff\/es6-draft.html)\n\n### Polymer\n```\n<link rel=\"import\" href=\"..\/bower_components\/polymer\/polymer.html\">\n<link rel=\"import\" href=\"..\/bower_components\/core-ajax\/core-ajax.html\">\n\n<polymer-element name=\"my-element\" noscript>\n  <template>\n    <span>I'm <b>my-element<\/b>. This is my Shadow DOM.<\/span>\n    <core-ajax url=\"http:\/\/example.com\/json\" auto response=\"{{resp}}\"><\/core-ajax>\n    <textarea value=\"{{resp}}\"><\/textarea>\n  <\/template>\n<\/polymer-element>\n[\/code]\n\n##Web Backend\nNeben den alten Bekannten PHP, Ruby, Java oder .NET gewinnt Googles Go immer mehr an Bedeutung. Viele sagen, dass die Entwicklung mit Go \"a lot of fun\" ist, die Sprache einfach zu lesen ist, schnell kompiliert und f\u00fcr die Entwicklung auf Multicore-Systemen (also alle heutzutage) optimiert ist. 2015 wird wohl auch das Jahr von Javascript am Server sein. node.js wird sich wohl durchsetzen und in die Gruppe der gro\u00dfen Webplattformen einreihen, falls nicht schon passiert. \n\n### node.js (Express)\n```\nvar express = require('express')\nvar app = express()\n\napp.get('\/', function (req, res) {\n  res.send('Hello World!')\n})\n\nvar server = app.listen(3000, function () {\n\n  var host = server.address().address\n  var port = server.address().port\n\n  console.log('Example app listening at http:\/\/%s:%s', host, port)\n\n})\n\n[\/code]\n\n##Java und PHP 2015\nDie Java-Entwickler haben letztes Jahr die [Version 8](https:\/\/www.java.com\/de\/download\/faq\/java8.xml) von Oracle geliefert bekommen, da wird's sicher wieder einige Zeit (Jahre?) dauern bis wieder was nachkommt ... so lange wird man wohl auch brauchen bis alle Java-Applikationen darauf umgestellt sind. Die neue Version kann jetzt Lambda-Ausdr\u00fccke, die Javascript-Engine wurde komplett neu gemacht und neue APIs f\u00fcr zB.: Datum\/Uhrzeit, Streams und Base64. Wer eher funktionale Sprachen gut findet, aber trotzdem in der Java-Welt bleiben m\u00f6chte, sollte sich mal Clojure ansehen. [Clojure](http:\/\/clojure.org\/) ist eine funktionale Sprache f\u00fcr die JVM die von Lisp abstammt und das Hauptaugenmerk auf nebenl\u00e4ufige Programmierung (concurrency) legt ... der Ableger f\u00fcr die Erlang Platform hei\u00dft [Elixir](http:\/\/elixir-lang.org\/). \n\n### Clojure\n```\n(def hello (fn [] \"Hello world\"))\n-> #'user\/hello\n(hello)\n-> \"Hello world\"\n[\/code]\n\nEin spannendes Jahr wird es f\u00fcr die PHP Entwickler ... ich denke in den n\u00e4chsten Monaten wird sich entscheiden ob der Ableger [hhvm](http:\/\/hhvm.com\/) von Facebook oder die n\u00e4chste PHP-Version 7 (php-ng) das Rennen machen wird. Derzeit hat hhvm einen leichten Vorsprung, immerhin laufen Facebook, [WP Engine](http:\/\/wpengine.com\/2014\/11\/19\/hhvm-project-mercury\/) und seit kurzem auch [Wikipedia auf hhvm](http:\/\/hhvm.com\/blog\/7205\/wikipedia-on-hhvm). F\u00fcr hhvm hat Facebook auch noch die neue Sprache Hack ver\u00f6ffentlicht die eine Erweiterung zu PHP darstellt und diese um Typsicherheit erg\u00e4nzt. \n\n### Hack und HHVM\n```\n<?hh\nclass AnnotatedClass {\n  public int $x;\n  private string $s;\n  protected array $arr;\n  public AnotherClass $ac;\n\n  function bar(string $str, bool $b): float {\n    if ($b && $str === \"Hi\") {\n       return 3.2;\n    }\n    return 0.3;\n  }\n}\n[\/code]\n\n##Mobile Apps\nBei den Apps w\u00fcrde ich gerne [Swift](http:\/\/swift-lang.org\/main\/) von Apple hervorheben, nat\u00fcrlich wird Swift nicht Java (Android) ersetzen, weil ja nur auf iOS verf\u00fcgbar, dort aber d\u00fcrfte Swift relativ schnell Objective-C abl\u00f6sen. Ich hab jetzt schon einige Artikel gelesen, in denen Entwickler sagen, dass alle neuen Projekte nur mehr in Swift angefangen werden, Objective-C ist damit bald nur mehr als Legacy-Code vorhanden. Windows-Phone d\u00fcrfte auch 2015 keine Rolle spielen? Hab zumindest nichts Gegenteiliges gelesen.\n\n### Swift\n```\nclass Residence {\n    var rooms = [Room]()\n    var numberOfRooms: Int {\n        return rooms.count\n    }\n    subscript(i: Int) -> Room {\n        get {\n            return rooms[i]\n        }\n        set {\n            rooms[i] = newValue\n        }\n    }\n    func printNumberOfRooms() {\n        println(\"The number of rooms is \\(numberOfRooms)\")\n    }\n    var address: Address?\n}\n[\/code]\n\n##System\nRust, Rust, Rust ... man hat das Gef\u00fchl, dass alle nur mehr davon sprechen. Angeblich der lang erwartete Nachfolger f\u00fcr C oder zumindest der vielversprechendste Anw\u00e4rter seit Jahren. Alternativ ist noch [nim](http:\/\/nim-lang.org\/) (formerly known as nimrod) zu nennen, das wohl \u00e4hnliche Ziele verfolgt aber nicht ganz so tief runter geht wie [Rust](http:\/\/www.rust-lang.org\/). Es geht bei beiden um die Minimierung der ganzen Probleme bei der Multithreading-Programmierung, die Entwickler sollten sich zuk\u00fcnftig keine Gedanken mehr \u00fcber Locking, [Race Conditions](http:\/\/de.wikipedia.org\/wiki\/Race_Condition) und [Data Races](http:\/\/docs.oracle.com\/cd\/E19205-01\/820-0619\/geojs\/index.html) machen m\u00fcssen ... das alles soll auf Compilerebene gel\u00f6st werden.\n\n### Rust\n```\nfn main() {\n    \/\/ A simple integer calculator:\n    \/\/ `+` or `-` means add or subtract by 1\n    \/\/ `*` or `\/` means multiply or divide by 2\n    let program = \"+ + * - \/\";\n    let mut accumulator = 0;\n    for token in program.chars() {\n        match token {\n            '+' => accumulator += 1,\n            '-' => accumulator -= 1,\n            '*' => accumulator *= 2,\n            '\/' => accumulator \/= 2,\n            _ => { \/* ignore everything else *\/ }\n        }\n    }\n    println!(\"The program \\\"{}\\\" calculates the value {}\",\n              program, accumulator);\n}\n[\/code]\n\n## Sonst so ...\nSch\u00f6n das sich immer so viel tut in unserem Bereich ... dann wird's wenigstens nicht langweilig. Wenn jemand glaubt ich h\u00e4tte was wichtiges \u00fcbersehen dann bitte melden ... neue Sprachen anschauen ist immer fun (L\u00e4cheln)\n\n\n### Quellen:\n* http:\/\/www.infoworld.com\/article\/2866057\/java\/javascript-surges-past-swift-r-for-programming-language-of-the-year-honors.html\n* http:\/\/www.tiobe.com\/index.php\/content\/paperinfo\/tpci\/index.html\n* http:\/\/www.freshersjobupdates.in\/2014\/06\/top-10-programming-languages-that-are.html\n* https:\/\/news.ycombinator.com\/item?id=8803678\n* http:\/\/tutorialzine.com\/2014\/12\/the-languages-and-frameworks-that-you-should-learn-in-2015\/\n* https:\/\/medium.com\/@shijuvar\/web-development-trends-for-2015-and-beyond-c2d3c1ef5718\n* http:\/\/redmonk.com\/sogrady\/2015\/01\/14\/language-rankings-1-15\/","title":"2015 - Das Jahr der Programmiersprachen?","slug":"2015-das-jahr-der-programmiersprachen","createDate":1422012546,"hash":"203e4278a2690723d326ca437119e00c","status":1}