{"author":19,"content":"Jeder Entwickler kennt die Situation; man muss \u00c4nderungen in einem fremden Projekt vornehmen, findet aber eine unsch\u00f6ne Code-Basis vor:\n* Tabs und Spaces sind gemischt\n* Der Code Style ist inkonsistent\n* DocBlocks sind eine Seltenheit\n* Es sind keine Tests vorhanden \n* Im VCS wurden keine Versionen getagged\n\nBei dieser Ausgangsbasis w\u00fcrde man das Projekt am liebsten erst gar nicht angreifen.\n![](http:\/\/i.imgur.com\/J1svNp7.jpg) \nNach einigen Jahren Entwicklung an unserer Core-Library (PHP), ist diese genau zu so einem Projekt geworden. Man vermeidet so weit wie m\u00f6glich \u00c4nderungen, weil die Folgen oft unabsehbar sind.\n\nUm unsere Entwicklung wieder angenehmer zu machen, musste also ein neues Konzept her. Wir entschieden uns, unsere Kernkomponenten in Composer-Packages aufzuteilen, um in Zukunft flexibler zu sein (und um unsere WTFs\/minute zu reduzieren \ud83d\ude09 ).\n\n## Ma\u00dfnahmen zur Verbesserung der Code Qualit\u00e4t\n\nUm die Code Qualit\u00e4t \u00fcber alle Packages hinweg konsistent zu halten, machen wir von folgenden Praktiken gebrauch:\n* Jedes Paket enth\u00e4lt eine [.editorconfig](http:\/\/editorconfig.org\/)-Datei:  ```\ncharset = utf-8\nend_of_line = lf\nindent_style = space\nindent_size = 4\n[\/code]\n* Jedes Paket h\u00e4lt sich an den [PSR-2](https:\/\/github.com\/php-fig\/fig-standards\/blob\/master\/accepted\/PSR-2-coding-style-guide.md) Standard.\n* Jedes Paket enth\u00e4lt Tests f\u00fcr die wichtigsten Funktionen.\n* Jedes Paket muss nach [SemVer 2.0.0](http:\/\/semver.org\/) versioniert werden.\n\nAber was helfen all diese Richtlinien, wenn sich keiner daran h\u00e4lt? Aus diesem Grund haben wir ein Code-Quality-Package erstellt, welches dem Entwickler hilft, sich an die Vorgaben zu halten.\n\nDieses kann einfach als 'require-dev' zu einem Package hinzugef\u00fcgt werden und enth\u00e4lt folgende Funktionen, welche als Composer-Script ausgef\u00fchrt werden k\u00f6nnen:\n* Ausf\u00fchren der Tests (und Erstellung eines Code Coverage Reports).\n* \u00dcberpr\u00fcfung des Code Style (PSR-2).\n* Automatisches beheben von Code Style Fehlern.\n\n## Automatisierung\n\nDiese Tests werden au\u00dferdem automatisch in Jenkins ausgef\u00fchrt. Dadurch sieht man sofort, welche Packages Verbesserungsbedarf haben:\n\n![](\/\/kcdn.at\/dev-blog\/images\/php-code-quality\/jenkins_packages.png)\n![](\/\/kcdn.at\/dev-blog\/images\/php-code-quality\/jenkins_codequality.png)\n\n## Fazit\n\nQualitativ hochwertiger Code = gl\u00fcckliche Entwickler = mehr Effizienz beim Entwickeln.","title":"Code Quality matters","slug":"php-code-quality","createDate":1467796497,"hash":"018fe9d145e0eba38e537825987fb5cf","status":1}