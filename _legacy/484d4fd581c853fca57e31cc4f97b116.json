{"author":1,"content":"Neue Features den Benutzern sofort zug\u00e4nglich machen und Bugfixes innerhalb kurzer Zeit zu beheben, ist oft sehr schwer zu verwirklichen. Wir bei karriere.at versuchen unser Bestes dieses Vorgehen zu leben. M\u00f6glich ist das aber nur durch unsere Entwicklungs- und Test- und Deployment-Umgebungen, sowie der Disziplin unserer Entwickler. Wie das bei uns funktioniert, m\u00f6chten wir in diesem Artkiel erkl\u00e4ren.\n[---]\n# Was bedeutet Continuous Delivery bei karriere.at?\n\nCarl Caum hat mal folgenden Text getwittert:  \n\n> \"Continuous Delivery doesn't mean every change is deployed to production ASAP. It means every change is proven to be deployable at any time.\"  \n\nGenau nach diesem Prinzip arbeiten wir auch bei karriere.at. Nicht jede \u00c4nderung wird sofort auf unsere Live-Server deployed. Nicht jede \u00c4nderung wollen wir sofort zur Verf\u00fcgung stellen. Falls wir das aber wollen, ist es m\u00f6glich. Daf\u00fcr verwenden wird verschiedene Werkzeuge die uns dabei helfen:\n\n* Grunt: Zur Erstellung und Kompilierung unserer Assets,\n* Git: Zur Verwaltung und Versionierung unseres Source-Codes,\n* Gitlab: Um unsere \u00c4nderungen nachvollziehen zu k\u00f6nnen und \u00fcber\nMerge Requests ( bei GitHub: Pull Requests )\nCode Reviews durchzuf\u00fchren.\n* Jenkins: Um \u00c4nderungen zu testen und diese auf Test, Staging oder Production zu verteilen.\n\n# Coding & Code-Review\n![](\/\/kcdn.at\/dev-blog\/images\/continuous-delivery-bei-karriere-at\/gitlab.png)\nAbbildung: Gitlab Activity Stream\n\nF\u00fcr jede \u00c4nderung am Code wird bei uns ein Bugfix- oder Feature-Branch vom Master weg erstellt und man beginnt zu entwickeln. Auf dem erstellten Branch k\u00f6nnen einzelne oder mehrere Team-Mitglieder arbeiten, ohne dass dadurch der Master-Branch \"dirty\" wird. \n\nIst der Bug behoben beziehungsweise das Feature fertig entwickelt, wird vom Entwickler ein Merge-Request in Gitlab erstellt und einem anderen Entwickler zugeteilt. Dieser f\u00fchrt ein Review des Source-Codes durch und kann dabei direkt beim ge\u00e4nderten Code Anmerkungen oder Verbesserungsvorschl\u00e4ge hinterlassen. Der Ersteller des Merge-Requests wird \u00fcber die Kommentare benachrichtigt und kann diese beantworten oder den Code weiter verbessern. \n\nIst der Reviewer mit allen \u00c4nderungen zufrieden, akzeptiert er den Merge-Request. Durch einen Pre-Merge Hook werden die \u00c4nderungen automatisch im Continuous-Integration-Server Jenkins \u00fcberpr\u00fcft. Falls auch dieser Test positiv ist, wird der Branch automatisch in den Master gemergt.\n\n# Testing, Staging & Live Deployment\n\n![](\/\/kcdn.at\/dev-blog\/images\/continuous-delivery-bei-karriere-at\/\u00dcbersicht_Jenkins.png) Abbildung: \u00dcbersicht aller Jenkins-Deploys\n\nDer Master-Branch, aber auch ein Feature- und Bugfix-Branch, kann mittels Jenkins auf Test-Servern bereitgestellt werden, die den selben Stack wie unsere Live-Server aufweisen. Hier wird die gesamte Codebase neu geklont und alle unsere Assets neu erstellt. Es werden Javascript-Files zusammengef\u00fcgt und komprimiert, Less-Files kompiliert, Webfonts erstellt und Tests durchgef\u00fchrt.\n\nUnsere Staging-Deploys n\u00fctzen wir um Branches zu deployen, die\n\n1. auch von au\u00dfen erreichbar sein sollen, und\n2. nicht von anderen Test-Deploys \u00fcberschrieben werden.\n\nDer Staging-Deploy \u00fcberschreibt keine \u00e4lteren Deploys und generiert eine auf dem Branch basierende URL, die danach auch mit QA, Marketing und anderen Mitarbeitern zum Ansehen, Kontrollieren und Testen verwendet werden kann.\n\nAuch das Live-Deployment wird \u00fcber den CI-Server Jenkins durchgef\u00fchrt. Auch hier werden Tests, sowie der Asset-Erstellungsprozess durchlaufen und das fertige Build danach auf unsere Webserver verteilt.\n\n# Zusammenfassung\n\nViele der erw\u00e4hnten Prozesse sind automatisiert und erleichtern uns den Entwicklungsalltag. Wir versuchen trotzdem t\u00e4glich, die erw\u00e4hnten Abl\u00e4ufe zu verbessern und zu optimieren. Diese werden bei uns mehrmals t\u00e4glich durchlaufen \u2013 so kann es sein, dass unsere Web-Applikationen bis zu 15 Updates pro Tag erhalten.","title":"Continuous Delivery bei karriere.at","slug":"continuous-delivery-bei-karriere-at","createDate":1427285245,"hash":"484d4fd581c853fca57e31cc4f97b116","status":1}